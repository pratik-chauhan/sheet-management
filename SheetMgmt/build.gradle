buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5")
		//classpath("com.mangofactory:swagger-springmvc:0.1.5")
		//classpath("io.springfox:springfox-swagger-ui:2.6.1")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

sonarqube {
    properties {
        property "sonar.projectName", "Sheet Management"
        property "sonar.projectKey", "org.sonarqube:java-gradle-simple"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

def webappDir = "$projectDir/src/main/webapp"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	// installAngular should be run prior to this task
	//dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// ng doesn't exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}
 
/*task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "install"
	}
}*/

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile(group: 'org.hibernate' , name: 'hibernate-entitymanager')
	compile (group: 'mysql' , name: 'mysql-connector-java', version:'5.1.22')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("io.springfox:springfox-swagger2:2.1.1")
    compile("io.springfox:springfox-swagger-ui:2.1.1")
    //compile("org.springframework.boot:spring-boot-starter-freemarker")
    //compile(group: 'org.jasypt' ,name: 'jasypt' ,version: '1.9.2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
